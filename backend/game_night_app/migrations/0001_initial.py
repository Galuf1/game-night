# Generated by Django 4.1 on 2022-08-22 14:30

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=64, unique=True, verbose_name='email address')),
                ('username', models.CharField(max_length=16, unique=True, verbose_name='Username')),
                ('first_name', models.CharField(max_length=16, verbose_name='First name')),
                ('last_name', models.CharField(max_length=16, verbose_name='Last name')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_1', models.CharField(max_length=128, verbose_name='Address')),
                ('address_2', models.CharField(blank=True, default=None, max_length=128, null=True, verbose_name="Address cont'd")),
                ('city', models.CharField(max_length=64, verbose_name='City')),
                ('state', models.CharField(max_length=2, verbose_name='State')),
                ('zip_code', models.CharField(max_length=5, verbose_name='Zip code')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('C1', 'Category 1'), ('C2', 'Category 2'), ('C3', 'Category 3'), ('C4', 'Category 4'), ('C5', 'Category 5')], default='C1', max_length=2, verbose_name='Category')),
                ('max_participants', models.IntegerField(blank=True, default=None, null=True, verbose_name='Maximum Participants')),
                ('private', models.BooleanField(blank=True, default=False, null=True, verbose_name='Private game?')),
                ('date_time', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Game date and time')),
                ('about', models.TextField(blank=True, default=None, null=True, verbose_name='About')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='game_night_app.address')),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, unique=True, verbose_name='Title')),
                ('player_num', models.IntegerField(blank=True, default=None, null=True, verbose_name='Number of Players')),
                ('description', models.TextField(blank=True, default=None, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='GameDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gameid', models.CharField(max_length=10, unique=True, verbose_name='Game ID')),
                ('handle', models.CharField(blank=True, default=None, max_length=32, null=True, verbose_name='Handle')),
                ('url', models.URLField(blank=True, default=None, max_length=64, null=True, verbose_name='URL')),
                ('edit_url', models.URLField(blank=True, default=None, max_length=64, null=True, verbose_name='Edit URL')),
                ('name', models.CharField(blank=True, default=None, max_length=32, null=True, verbose_name='Name')),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=5, null=True, verbose_name='Price')),
                ('price_ca', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=5, null=True, verbose_name='Canada Price')),
                ('price_uk', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=5, null=True, verbose_name=' UK Price')),
                ('price_au', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=5, null=True, verbose_name='Australia Price')),
                ('msrp', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=5, null=True, verbose_name='MSRP')),
                ('discount', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=3, null=True, verbose_name='Discount')),
                ('year_published', models.IntegerField(blank=True, default=None, null=True, verbose_name='Year Published')),
                ('min_players', models.IntegerField(blank=True, default=None, null=True, verbose_name='Minimum Players')),
                ('max_players', models.IntegerField(blank=True, default=None, null=True, verbose_name='Maximum Players')),
                ('min_playtime', models.IntegerField(blank=True, default=None, null=True, verbose_name='Minimum Playtime')),
                ('max_playtime', models.IntegerField(blank=True, default=None, null=True, verbose_name='Maximum Playtime')),
                ('min_age', models.IntegerField(blank=True, default=None, null=True, verbose_name='Minimum Age')),
                ('description', models.TextField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('groups', models.ManyToManyField(blank=True, related_name='Groupgroups', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GroupList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('groups', models.ManyToManyField(blank=True, related_name='GroupListgroups', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to='game_night_app.group')),
            ],
        ),
        migrations.CreateModel(
            name='EventUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendee', models.ManyToManyField(related_name='attendees', to=settings.AUTH_USER_MODEL)),
                ('event', models.ManyToManyField(related_name='events', to='game_night_app.event')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EventGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eventgames', to='game_night_app.event')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games', to='game_night_app.game')),
            ],
        ),
        migrations.CreateModel(
            name='GroupRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(blank=True, default=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('sender', 'receiver')},
            },
        ),
    ]
